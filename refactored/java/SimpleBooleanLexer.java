// Generated from SimpleBoolean.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SimpleBooleanLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		AND=1, OR=2, NOT=3, TRUE=4, FALSE=5, IF=6, THEN=7, ELSE=8, GT=9, GE=10, 
		LT=11, LE=12, EQ=13, NEQ=14, LPAREN=15, RPAREN=16, DECIMAL=17, SQRT=18, 
		MULT=19, DIV=20, ADD=21, SUB=22, WS=23;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"AND", "OR", "NOT", "TRUE", "FALSE", "IF", "THEN", "ELSE", "GT", "GE", 
			"LT", "LE", "EQ", "NEQ", "LPAREN", "RPAREN", "DECIMAL", "SQRT", "MULT", 
			"DIV", "ADD", "SUB", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, "'IF'", null, null, null, null, null, 
			null, null, null, "'('", "')'", null, "'SQRT'", "'*'", "'/'", "'+'", 
			"'-'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "AND", "OR", "NOT", "TRUE", "FALSE", "IF", "THEN", "ELSE", "GT", 
			"GE", "LT", "LE", "EQ", "NEQ", "LPAREN", "RPAREN", "DECIMAL", "SQRT", 
			"MULT", "DIV", "ADD", "SUB", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SimpleBooleanLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SimpleBoolean.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0017\u00cf\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0003\u00004\b\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0003\u00019\b\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0003\u0002?\b\u0002\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0003\u0003M\b\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0003\u0004^\b\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006q\b\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0003\u0007"+
		"\u007f\b\u0007\u0001\b\u0001\b\u0001\b\u0003\b\u0084\b\b\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0003\t\u008b\b\t\u0001\n\u0001\n\u0001\n\u0003"+
		"\n\u0090\b\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0003\u000b\u0097\b\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0003\f\u009d"+
		"\b\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0003\r\u00a6"+
		"\b\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0003"+
		"\u0010\u00ad\b\u0010\u0001\u0010\u0004\u0010\u00b0\b\u0010\u000b\u0010"+
		"\f\u0010\u00b1\u0001\u0010\u0001\u0010\u0004\u0010\u00b6\b\u0010\u000b"+
		"\u0010\f\u0010\u00b7\u0003\u0010\u00ba\b\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016"+
		"\u0004\u0016\u00ca\b\u0016\u000b\u0016\f\u0016\u00cb\u0001\u0016\u0001"+
		"\u0016\u0000\u0000\u0017\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004"+
		"\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017"+
		"\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'"+
		"\u0014)\u0015+\u0016-\u0017\u0001\u0000\u0002\u0001\u000009\u0003\u0000"+
		"\t\n\f\r  \u00e8\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u00013\u0001\u0000\u0000\u0000\u00038\u0001\u0000\u0000\u0000\u0005"+
		">\u0001\u0000\u0000\u0000\u0007L\u0001\u0000\u0000\u0000\t]\u0001\u0000"+
		"\u0000\u0000\u000b_\u0001\u0000\u0000\u0000\rp\u0001\u0000\u0000\u0000"+
		"\u000f~\u0001\u0000\u0000\u0000\u0011\u0083\u0001\u0000\u0000\u0000\u0013"+
		"\u008a\u0001\u0000\u0000\u0000\u0015\u008f\u0001\u0000\u0000\u0000\u0017"+
		"\u0096\u0001\u0000\u0000\u0000\u0019\u009c\u0001\u0000\u0000\u0000\u001b"+
		"\u00a5\u0001\u0000\u0000\u0000\u001d\u00a7\u0001\u0000\u0000\u0000\u001f"+
		"\u00a9\u0001\u0000\u0000\u0000!\u00ac\u0001\u0000\u0000\u0000#\u00bb\u0001"+
		"\u0000\u0000\u0000%\u00c0\u0001\u0000\u0000\u0000\'\u00c2\u0001\u0000"+
		"\u0000\u0000)\u00c4\u0001\u0000\u0000\u0000+\u00c6\u0001\u0000\u0000\u0000"+
		"-\u00c9\u0001\u0000\u0000\u0000/0\u0005A\u0000\u000001\u0005N\u0000\u0000"+
		"14\u0005D\u0000\u000024\u0005&\u0000\u00003/\u0001\u0000\u0000\u00003"+
		"2\u0001\u0000\u0000\u00004\u0002\u0001\u0000\u0000\u000056\u0005O\u0000"+
		"\u000069\u0005R\u0000\u000079\u0005|\u0000\u000085\u0001\u0000\u0000\u0000"+
		"87\u0001\u0000\u0000\u00009\u0004\u0001\u0000\u0000\u0000:;\u0005N\u0000"+
		"\u0000;<\u0005O\u0000\u0000<?\u0005T\u0000\u0000=?\u0005!\u0000\u0000"+
		">:\u0001\u0000\u0000\u0000>=\u0001\u0000\u0000\u0000?\u0006\u0001\u0000"+
		"\u0000\u0000@A\u0005T\u0000\u0000AB\u0005R\u0000\u0000BC\u0005U\u0000"+
		"\u0000CM\u0005E\u0000\u0000DE\u0005T\u0000\u0000EF\u0005r\u0000\u0000"+
		"FG\u0005u\u0000\u0000GM\u0005e\u0000\u0000HI\u0005t\u0000\u0000IJ\u0005"+
		"r\u0000\u0000JK\u0005u\u0000\u0000KM\u0005e\u0000\u0000L@\u0001\u0000"+
		"\u0000\u0000LD\u0001\u0000\u0000\u0000LH\u0001\u0000\u0000\u0000M\b\u0001"+
		"\u0000\u0000\u0000NO\u0005F\u0000\u0000OP\u0005A\u0000\u0000PQ\u0005L"+
		"\u0000\u0000QR\u0005S\u0000\u0000R^\u0005E\u0000\u0000ST\u0005F\u0000"+
		"\u0000TU\u0005a\u0000\u0000UV\u0005l\u0000\u0000VW\u0005s\u0000\u0000"+
		"W^\u0005e\u0000\u0000XY\u0005f\u0000\u0000YZ\u0005a\u0000\u0000Z[\u0005"+
		"l\u0000\u0000[\\\u0005s\u0000\u0000\\^\u0005e\u0000\u0000]N\u0001\u0000"+
		"\u0000\u0000]S\u0001\u0000\u0000\u0000]X\u0001\u0000\u0000\u0000^\n\u0001"+
		"\u0000\u0000\u0000_`\u0005I\u0000\u0000`a\u0005F\u0000\u0000a\f\u0001"+
		"\u0000\u0000\u0000bc\u0005T\u0000\u0000cd\u0005H\u0000\u0000de\u0005E"+
		"\u0000\u0000eq\u0005N\u0000\u0000fg\u0005T\u0000\u0000gh\u0005h\u0000"+
		"\u0000hi\u0005e\u0000\u0000iq\u0005n\u0000\u0000jk\u0005t\u0000\u0000"+
		"kl\u0005h\u0000\u0000lm\u0005e\u0000\u0000mq\u0005n\u0000\u0000no\u0005"+
		"-\u0000\u0000oq\u0005>\u0000\u0000pb\u0001\u0000\u0000\u0000pf\u0001\u0000"+
		"\u0000\u0000pj\u0001\u0000\u0000\u0000pn\u0001\u0000\u0000\u0000q\u000e"+
		"\u0001\u0000\u0000\u0000rs\u0005E\u0000\u0000st\u0005L\u0000\u0000tu\u0005"+
		"S\u0000\u0000u\u007f\u0005E\u0000\u0000vw\u0005E\u0000\u0000wx\u0005l"+
		"\u0000\u0000xy\u0005s\u0000\u0000y\u007f\u0005e\u0000\u0000z{\u0005e\u0000"+
		"\u0000{|\u0005l\u0000\u0000|}\u0005s\u0000\u0000}\u007f\u0005e\u0000\u0000"+
		"~r\u0001\u0000\u0000\u0000~v\u0001\u0000\u0000\u0000~z\u0001\u0000\u0000"+
		"\u0000\u007f\u0010\u0001\u0000\u0000\u0000\u0080\u0084\u0005>\u0000\u0000"+
		"\u0081\u0082\u0005G\u0000\u0000\u0082\u0084\u0005T\u0000\u0000\u0083\u0080"+
		"\u0001\u0000\u0000\u0000\u0083\u0081\u0001\u0000\u0000\u0000\u0084\u0012"+
		"\u0001\u0000\u0000\u0000\u0085\u0086\u0005>\u0000\u0000\u0086\u008b\u0005"+
		"=\u0000\u0000\u0087\u0088\u0005G\u0000\u0000\u0088\u008b\u0005E\u0000"+
		"\u0000\u0089\u008b\u0005\u2265\u0000\u0000\u008a\u0085\u0001\u0000\u0000"+
		"\u0000\u008a\u0087\u0001\u0000\u0000\u0000\u008a\u0089\u0001\u0000\u0000"+
		"\u0000\u008b\u0014\u0001\u0000\u0000\u0000\u008c\u0090\u0005<\u0000\u0000"+
		"\u008d\u008e\u0005L\u0000\u0000\u008e\u0090\u0005T\u0000\u0000\u008f\u008c"+
		"\u0001\u0000\u0000\u0000\u008f\u008d\u0001\u0000\u0000\u0000\u0090\u0016"+
		"\u0001\u0000\u0000\u0000\u0091\u0092\u0005<\u0000\u0000\u0092\u0097\u0005"+
		"=\u0000\u0000\u0093\u0094\u0005L\u0000\u0000\u0094\u0097\u0005E\u0000"+
		"\u0000\u0095\u0097\u0005\u2264\u0000\u0000\u0096\u0091\u0001\u0000\u0000"+
		"\u0000\u0096\u0093\u0001\u0000\u0000\u0000\u0096\u0095\u0001\u0000\u0000"+
		"\u0000\u0097\u0018\u0001\u0000\u0000\u0000\u0098\u0099\u0005=\u0000\u0000"+
		"\u0099\u009d\u0005=\u0000\u0000\u009a\u009b\u0005E\u0000\u0000\u009b\u009d"+
		"\u0005Q\u0000\u0000\u009c\u0098\u0001\u0000\u0000\u0000\u009c\u009a\u0001"+
		"\u0000\u0000\u0000\u009d\u001a\u0001\u0000\u0000\u0000\u009e\u009f\u0005"+
		"!\u0000\u0000\u009f\u00a6\u0005=\u0000\u0000\u00a0\u00a1\u0005<\u0000"+
		"\u0000\u00a1\u00a6\u0005>\u0000\u0000\u00a2\u00a3\u0005N\u0000\u0000\u00a3"+
		"\u00a4\u0005E\u0000\u0000\u00a4\u00a6\u0005Q\u0000\u0000\u00a5\u009e\u0001"+
		"\u0000\u0000\u0000\u00a5\u00a0\u0001\u0000\u0000\u0000\u00a5\u00a2\u0001"+
		"\u0000\u0000\u0000\u00a6\u001c\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005"+
		"(\u0000\u0000\u00a8\u001e\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005)\u0000"+
		"\u0000\u00aa \u0001\u0000\u0000\u0000\u00ab\u00ad\u0005-\u0000\u0000\u00ac"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad"+
		"\u00af\u0001\u0000\u0000\u0000\u00ae\u00b0\u0007\u0000\u0000\u0000\u00af"+
		"\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1"+
		"\u00af\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2"+
		"\u00b9\u0001\u0000\u0000\u0000\u00b3\u00b5\u0005.\u0000\u0000\u00b4\u00b6"+
		"\u0007\u0000\u0000\u0000\u00b5\u00b4\u0001\u0000\u0000\u0000\u00b6\u00b7"+
		"\u0001\u0000\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b7\u00b8"+
		"\u0001\u0000\u0000\u0000\u00b8\u00ba\u0001\u0000\u0000\u0000\u00b9\u00b3"+
		"\u0001\u0000\u0000\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000\u00ba\"\u0001"+
		"\u0000\u0000\u0000\u00bb\u00bc\u0005S\u0000\u0000\u00bc\u00bd\u0005Q\u0000"+
		"\u0000\u00bd\u00be\u0005R\u0000\u0000\u00be\u00bf\u0005T\u0000\u0000\u00bf"+
		"$\u0001\u0000\u0000\u0000\u00c0\u00c1\u0005*\u0000\u0000\u00c1&\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c3\u0005/\u0000\u0000\u00c3(\u0001\u0000\u0000"+
		"\u0000\u00c4\u00c5\u0005+\u0000\u0000\u00c5*\u0001\u0000\u0000\u0000\u00c6"+
		"\u00c7\u0005-\u0000\u0000\u00c7,\u0001\u0000\u0000\u0000\u00c8\u00ca\u0007"+
		"\u0001\u0000\u0000\u00c9\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cb\u0001"+
		"\u0000\u0000\u0000\u00cb\u00c9\u0001\u0000\u0000\u0000\u00cb\u00cc\u0001"+
		"\u0000\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000\u0000\u00cd\u00ce\u0006"+
		"\u0016\u0000\u0000\u00ce.\u0001\u0000\u0000\u0000\u0013\u000038>L]p~\u0083"+
		"\u008a\u008f\u0096\u009c\u00a5\u00ac\u00b1\u00b7\u00b9\u00cb\u0001\u0006"+
		"\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}